{"version":3,"file":"static/js/881.aa05af0d.chunk.js","mappings":"8KAEMA,EAAM,mCACNC,EAAU,+BAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,EAAUC,GAArC,uFAC2BC,EAAAA,EAAAA,IAAA,UAAaJ,GAAb,OAAuBE,EAAvB,oBAA2CH,GAA3C,OAAiDI,IACnEE,MAAK,SAACC,GAAD,OAAcA,EAASC,IAAvB,IACLC,OAAM,SAACC,GAAD,OAAYA,CAAZ,IAHf,cACUH,EADV,yBAKWA,GALX,kEAOA,IATA,SAE2B,EAAZL,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,8ICJf,GAAiB,E,SC8EjB,EAzEe,SAACS,GAAuB,IAAD,EAClC,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAChD,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,YAAtC,eAAOG,EAAP,KAAoBC,EAApB,KACMlB,EAAQ,gBACRC,EAAW,iBAAaW,GACxBO,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAaC,SAASC,cAAc,eACtCF,GAAcL,IACdK,EAAWG,MAAQR,EAE1B,GAAE,CAACA,KAYJI,EAAAA,EAAAA,YAAU,WAAM,wCAER,8GAE+BtB,EAAAA,EAAAA,GAAYC,EAAUC,GAFrD,OAEcG,EAFd,OAGQY,EAAUZ,EAASsB,SAH3B,gDAMQC,QAAQpB,MAAM,KAAMqB,SAN5B,0DAFQ,sBACO,KAAfhB,GADQ,mCAWRJ,EACP,GAAE,CAACI,EAAYZ,EAAUC,IAI1B,OACI,iBAAK4B,UAAWC,EAAAA,UAAhB,WACI,kBACIC,SANU,SAACC,GAClBA,EAAIC,gBACP,EAKUJ,UAAU,YAFd,WAII,kBACIJ,MAAOb,EACPsB,SAlCU,SAACF,GACE,KAArBA,EAAIG,OAAOV,OACXd,EAAgB,CAAC,GACjBO,EAAe,MAEfP,EAAgB,CAAEyB,MAAOJ,EAAIG,OAAOV,QACpCP,EAAec,EAAIG,OAAOV,OAEjC,EA2BeY,KAAK,OACLC,KAAK,kBACLT,UAAU,gBAEd,0CAEHd,IACG,wBACKA,EAAOwB,KAAI,SAACC,GAAD,OACR,yBACI,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEE,IAAMC,MAAO,CAAEC,KAAMzB,GAA5C,cAA0DqB,EAAEK,mBADvDL,EAAEE,GADH,QAS/B,C","sources":["API/fetchMovies.jsx","pages/Movies/Movies.module.css","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'a911aa07e81ec5a2dc7dd039825bfe81';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(endpoint, searchQuery) {\n    const response = await axios.get(`${baseURL}${endpoint}?api_key=${key}${searchQuery}`)\n        .then((response) => response.data)\n        .catch((error) => (error));\n    \n    return response;\n}\nexport default fetchMovies ;","// extracted by mini-css-extract-plugin\nexport default {};","import fetchMovies from \"../../API/fetchMovies\";\nimport { useState, useEffect} from \"react\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport css from './Movies.module.css';\n\nconst Movies = (fetchMovieByQuery) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParam = searchParams.get('query') ?? \"\";\n    const [movies, setMovies] = useState();\n    const [queryString, setQueryString] = useState();\n    const endpoint = `/search/movie`;\n    const searchQuery = `&query=${queryParam}`;\n    const location = useLocation();\n\n    useEffect(() => {\n        const inputValue = document.querySelector('.queryInput');\n        if (inputValue && queryString) {\n            inputValue.value = queryString;\n        }\n    }, [queryString]);\n\n    const updateQueryString = (evt) => {\n        if (evt.target.value === '') {\n            setSearchParams({});\n            setQueryString('');\n        } else {\n            setSearchParams({ query: evt.target.value });\n            setQueryString(evt.target.value);\n        }\n    };\n\n    useEffect(() => {\n        if (queryParam === \"\") return;\n            async function fetchMovieByQuery() {\n                try {\n                    const response = await fetchMovies(endpoint, searchQuery);\n                    setMovies(response.results);\n                }\n                catch (error) {\n                    console.error(error.message);\n                }\n            };\n            fetchMovieByQuery();\n    }, [queryParam, endpoint, searchQuery]);\n     const handleSubmit = (evt) => {\n         evt.preventDefault();\n     };\n    return (\n        <div className={css.container}>\n            <form\n                onSubmit={handleSubmit}\n                className=\"queryForm\"\n            >\n                <input\n                    value={queryParam}\n                    onChange={updateQueryString}\n                    type=\"text\"\n                    name=\"searchQueryForm\"\n                    className=\"queryInput\"\n                />\n                <button>Search</button>\n            </form>\n            {movies && (\n                <ul>\n                    {movies.map((i) => (\n                        <li key={i.id}>\n                            <Link to={`/movies/${i.id}`} state={{ from: location }}> {i.original_title}</Link>  \n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n}\n\nMovies.propTypes = {\n    id: PropTypes.string\n};\nexport default Movies;"],"names":["key","baseURL","fetchMovies","endpoint","searchQuery","axios","then","response","data","catch","error","fetchMovieByQuery","useSearchParams","searchParams","setSearchParams","queryParam","get","useState","movies","setMovies","queryString","setQueryString","location","useLocation","useEffect","inputValue","document","querySelector","value","results","console","message","className","css","onSubmit","evt","preventDefault","onChange","target","query","type","name","map","i","to","id","state","from","original_title"],"sourceRoot":""}