{"version":3,"file":"static/js/415.6b325090.chunk.js","mappings":"8KAEMA,EAAM,mCACNC,EAAU,+BAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,EAAUC,GAArC,uFAC2BC,EAAAA,EAAAA,IAAA,UAAaJ,GAAb,OAAuBE,EAAvB,oBAA2CH,GAA3C,OAAiDI,IACnEE,MAAK,SAACC,GAAD,OAAcA,EAASC,IAAvB,IACLC,OAAM,SAACC,GAAD,OAAYA,CAAZ,IAHf,cACUH,EADV,yBAKWA,GALX,kEAOA,IATA,SAE2B,EAAZL,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,iHCATC,EAAW,uBAmCjB,UAjCa,WACT,OAAsCQ,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAE+Bd,EAAAA,EAAAA,GAAYC,EAAU,IAFrD,OAEcI,EAFd,OAGQM,EAAeN,EAASU,SAHhC,gDAMQC,QAAQC,IAAR,MANR,0DAFY,uBAAC,WAAD,wBAWZC,EACH,GAAE,KAEC,6BACI,4CACA,wBACKR,EAAYS,KAAI,SAACC,GAAD,OACb,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEE,IAAMC,MAAO,CAAEC,KAAMZ,GAA5C,SAAyDQ,EAAEK,SADtDL,EAAEE,GADE,QAQhC,C","sources":["API/fetchMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'a911aa07e81ec5a2dc7dd039825bfe81';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(endpoint, searchQuery) {\n    const response = await axios.get(`${baseURL}${endpoint}?api_key=${key}${searchQuery}`)\n        .then((response) => response.data)\n        .catch((error) => (error));\n    \n    return response;\n}\nexport default fetchMovies ;","import { useState, useEffect     } from 'react';\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport  fetchMovies  from '../API/fetchMovies';\n\nconst endpoint = \"/trending/movie/week\";\n\nconst Home = () => {\n    const [trendMovies, setTrendMovies] = useState([]);\n    const location = useLocation();\n    useEffect(() => {\n\n        async function fetchMoviesData() {\n            try {\n                const response = await fetchMovies(endpoint, \"\");\n                setTrendMovies(response.results);\n            }\n            catch (error) {\n                console.log(error);\n            }\n        };\n        fetchMoviesData();\n    }, []);\n    return (\n        <main>\n            <h1>Trending today</h1>\n            <ul>\n                {trendMovies.map((i) => (\n                    <li key={i.id}>\n                        <Link to={`/movies/${i.id}`} state={{ from: location }}>{i.title}</Link>\n                    </li>\n                ))}\n            </ul>\n        </main>\n    )\n};\n\nHome.propTypes = {\n    id: PropTypes.string\n};\nexport default Home;"],"names":["key","baseURL","fetchMovies","endpoint","searchQuery","axios","then","response","data","catch","error","useState","trendMovies","setTrendMovies","location","useLocation","useEffect","results","console","log","fetchMoviesData","map","i","to","id","state","from","title"],"sourceRoot":""}