{"version":3,"file":"static/js/76.96e0d081.chunk.js","mappings":"6KAEMA,EAAM,mCACNC,EAAU,+BAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,EAAUC,GAArC,uFAC2BC,EAAAA,EAAAA,IAAA,UAAaJ,GAAb,OAAuBE,EAAvB,oBAA2CH,GAA3C,OAAiDI,IACnEE,MAAK,SAACC,GAAD,OAAcA,EAASC,IAAvB,IACLC,OAAM,SAACC,GAAD,OAAYA,CAAZ,IAHf,cACUH,EADV,yBAKWA,GALX,kEAOA,IATA,SAE2B,EAAZL,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,qICJf,GAAiB,E,SCyCjB,EApCa,WACT,IAAQS,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMZ,EAAQ,iBAAaQ,EAAb,YAad,OAZAK,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+Bd,EAAAA,EAAAA,GAAYC,EAAU,IAFrD,OAEcI,EAFd,OAGQQ,EAAaR,EAASU,MAH9B,gDAMQC,QAAQC,IAAR,MANR,0DADY,uBAAC,WAAD,wBAUZC,EACH,GAAE,CAACT,EAAIR,KAEJ,yBAC0B,IAArBW,EAAUO,QAAe,2CACrB,wBACIP,EAAUQ,KAAI,SAACC,GAAD,OACX,2BACI,gBAAKC,UAAWC,EAAAA,QAAaC,IAAG,yCAAoCH,EAAEI,cAAgBC,IAAI,MAC1F,uBAAIL,EAAEM,QACN,uCAAeN,EAAEO,eAHZP,EAAEZ,GADA,OAWlC,C","sources":["API/fetchMovies.jsx","components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst key = 'a911aa07e81ec5a2dc7dd039825bfe81';\nconst baseURL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(endpoint, searchQuery) {\n    const response = await axios.get(`${baseURL}${endpoint}?api_key=${key}${searchQuery}`)\n        .then((response) => response.data)\n        .catch((error) => (error));\n    \n    return response;\n}\nexport default fetchMovies ;","// extracted by mini-css-extract-plugin\nexport default {};","import { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport fetchMovies from \"../../API/fetchMovies\";\nimport { useState, useEffect } from \"react\";\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [movieCast, setMovieCast] = useState([]);\n    const endpoint = `/movie/${id}/credits`;\n    useEffect(() => {\n        async function fetchCast() {\n            try {\n                const response = await fetchMovies(endpoint, \"\");\n                setMovieCast(response.cast);\n            }\n            catch (error) {\n                console.log(error);\n            }\n        };\n        fetchCast();\n    }, [id, endpoint]);\n    return (\n        <div>\n            {movieCast.length === 0 ? <p>No information</p> :\n                (<ul>\n                    {movieCast.map((i) =>\n                        <li key={i.id}>\n                            <img className={css.imgCast} src={`https://image.tmdb.org/t/p/w200${i.profile_path}`} alt=\"\" />\n                            <p>{i.name}</p>\n                            <p>Character: {i.character}</p>\n                        </li>)}\n\n                </ul>\n                )}\n        </div>\n    )\n};\n\nCast.propTypes = {\n    id: PropTypes.string\n};\nexport default Cast;"],"names":["key","baseURL","fetchMovies","endpoint","searchQuery","axios","then","response","data","catch","error","id","useParams","useState","movieCast","setMovieCast","useEffect","cast","console","log","fetchCast","length","map","i","className","css","src","profile_path","alt","name","character"],"sourceRoot":""}